#!/bin/bash

NEXT=$1
MESSAGE=$2

if [[ $# < 1 ]]; then
    echo -e "usage: git release increment:patch|minor|major|init|x.x.x [message]"
    exit 1
fi

LAST_VERSION=$(git describe --abbrev=0 --tags --match="v*" 2> /dev/null)
VERSION=$(echo $LAST_VERSION | tr -d "v")

NEXT_VERSION=v$(bump $NEXT $VERSION)
if [[ $? != 0 ]]; then
    exit 1
fi

if [[ -z "$MESSAGE" ]]; then
    MESSAGE=$(git log $LAST_VERSION..HEAD --no-merges --oneline | cut -d " " -f "2-" | sed -e 's/^/\\n- /')
fi

git hook pre-release $NEXT_VERSION
if [[ $? != 0 ]]; then
    echo "exit because pre-release exit with $?"
    exit 1
fi

git tag -a $NEXT_VERSION -m "$MESSAGE"
if [[ $? != 0 ]]; then
    echo "couldn't tag"
    exit 1
fi

echo $NEXT_VERSION

git hook post-release $NEXT_VERSION

if [ -n "$GITHUB_TOKEN" ]; then
    REPO=$(git name)
    BODY="Release of version $NEXT_VERSION\n\n$MESSAGE"
    API_JSON='{"tag_name": "'$NEXT_VERSION'","target_commitish": "master","name": "'$NEXT_VERSION'","body": "'$BODY'","draft": false,"prerelease": false}'
    echo $API_JSON
    curl --data "$API_JSON" "https://api.github.com/repos/$REPO/releases?access_token=$GITHUB_TOKEN"
fi

